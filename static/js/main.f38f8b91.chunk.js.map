{"version":3,"sources":["component/modules/Container.js","component/menu/Home.js","component/menu/Board/BoardItem.js","redux/action.js","component/modules/Button.js","component/menu/Board/Board.js","component/menu/Board/BoardDetail.js","component/menu/Setting.js","component/menu/Board/EditorComponent.js","component/menu/Board/BoardWrite.js","component/Main.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["MainContainer","styled","main","SubContainer","section","BottomContainer","footer","HomeContainer","Home","style","fontSize","fontFamily","role","connect","row","dispatch","height","cursor","brdnum","fontWeight","to","color","textDecoration","onClick","type","board_read","title","writer","date","toLocaleDateString","DefaultButton","button","SaveButton","withComponent","Link","Table","table","TableNum","th","TableTitle","TableWriter","TableDate","state","boards","board_reducer","props","map","key","Title","article","Writer","Desc","div","EditButton","DeleteButton","selectedBoard","history","dangerouslySetInnerHTML","__html","desc","board_delete","push","handleRemove","SettingContainer","NameInput","input","ConfirmButton","userState","userState_ruducer","useState","name","userName","setUseName","display","flexDirection","alignItems","marginTop","value","onChange","e","target","window","confirm","EditorComponent","modules","toolbar","header","list","indent","align","background","formats","this","width","theme","content","delta","source","editor","getHTML","Component","TopContainer","TitleInput","setTitle","setDesc","updateState","Object","keys","length","useEffect","unBlock","block","placeholder","preventDefault","saveData","Date","data","handleChangeMenu","index","setCurPage","page","TitleText","NavMenu","nav","NavList","li","NavLink","curpage","NavGithub","Main","curPage","href","exact","path","render","component","BoardDetail","App","Fragment","Boolean","location","hostname","match","mode","boardState","total","reducers","combineReducers","action","console","log","concat","initNum","filter","find","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f38f8b91.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90%;\r\n`;\r\n\r\nconst SubContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 50%;\r\n  margin-left: 10%;\r\n`;\r\n\r\nconst BottomContainer = styled.footer`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 10%;\r\n  width: 90%;\r\n  border-top: 1px solid #bdc3c7;\r\n`;\r\n\r\nexport { MainContainer, SubContainer, BottomContainer };\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { MainContainer, SubContainer } from \"../modules/Container\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <HomeContainer>\r\n      <SubContainer>\r\n        <article\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"KOTRA_BOLD-Bold\",\r\n          }}\r\n        >\r\n          토이 프로젝트 <span role=\"img\">🎉</span>\r\n        </article>\r\n        <article\r\n          style={{\r\n            fontSize: 20,\r\n            fontFamily: \"NanumBarunGothic\",\r\n          }}\r\n        >\r\n          react를 이용한 게시판입니다. <span role=\"img\">😊</span>\r\n        </article>\r\n      </SubContainer>\r\n\r\n      <SubContainer>\r\n        <article\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"KOTRA_BOLD-Bold\",\r\n          }}\r\n        >\r\n          기술 스택 <span role=\"img\">🔧</span>\r\n        </article>\r\n        <article>\r\n          <p\r\n            style={{\r\n              fontSize: 18,\r\n              fontFamily: \"NanumBarunGothic\",\r\n            }}\r\n          >\r\n            React\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontSize: 18,\r\n              fontFamily: \"NanumBarunGothic\",\r\n            }}\r\n          >\r\n            Redux\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontSize: 18,\r\n              fontFamily: \"NanumBarunGothic\",\r\n            }}\r\n          >\r\n            styled-component\r\n          </p>\r\n        </article>\r\n      </SubContainer>\r\n    </HomeContainer>\r\n  );\r\n}\r\n\r\nconst HomeContainer = styled(MainContainer)`\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { board_read } from \"../../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BoardItem({ row, dispatch }) {\r\n  const handleDetail = (brdnum) => {\r\n    dispatch(board_read(brdnum));\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr style={{ height: 40, cursor: \"pointer\" }}>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>{row.brdnum}</td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\", fontWeight: \"bold\" }}>\r\n          <Link\r\n            to={`/Board/${row.brdnum}`}\r\n            style={{ color: \"#111\", textDecoration: \"none\" }}\r\n            onClick={() => handleDetail(row.brdnum)}\r\n          >\r\n            {row.title}\r\n          </Link>\r\n        </td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>{row.writer}</td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>\r\n          {row.date.toLocaleDateString(\"kr-KR\")}\r\n        </td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default connect()(BoardItem);\r\n","const USERSTATE_NAME = \"NAME\";\r\nconst USERSTATE_MODE = \"MODE\";\r\n\r\nconst BOARD_CREATE = \"CREATE\";\r\nconst BOARD_DELETE = \"DELETE\";\r\nconst BOARD_READ = \"READ\";\r\nconst BOARD_LIST = \"LIST\";\r\n\r\nexport const change_name = (name) => ({ type: USERSTATE_NAME, name });\r\nexport const change_mode = (mode) => ({ type: USERSTATE_MODE, mode });\r\n\r\nexport const board_create = (data) => ({ type: BOARD_CREATE, data });\r\nexport const board_delete = (brdnum) => ({\r\n  type: BOARD_DELETE,\r\n  brdnum: brdnum,\r\n});\r\nexport const board_read = (brdnum) => ({ type: BOARD_READ, brdnum: brdnum });\r\nexport const board_list = () => ({ type: BOARD_LIST });\r\n","import styled from \"styled-components\";\r\n\r\nexport const DefaultButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 5rem;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 10%;\r\n  border: 0;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #fff;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport BoardItem from \"./BoardItem\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { DefaultButton } from \"../../modules/Button\";\r\nimport { MainContainer, BottomContainer } from \"../../modules/Container\";\r\n\r\nfunction Board(props) {\r\n  const { boards } = props; // mapReduxStateToReactProps 메소드 이용해서 reducer의 state 가져오기\r\n\r\n  return (\r\n    <MainContainer>\r\n      <SubContainer>\r\n        <Table>\r\n          <thead>\r\n            <tr style={{ height: 60 }}>\r\n              <TableNum>번호</TableNum>\r\n              <TableTitle>제목</TableTitle>\r\n              <TableWriter>작성자</TableWriter>\r\n              <TableDate>날짜</TableDate>\r\n            </tr>\r\n          </thead>\r\n          {boards.map((row) => (\r\n            <BoardItem key={row.brdnum} row={row}></BoardItem>\r\n          ))}\r\n        </Table>\r\n      </SubContainer>\r\n      <BottomContainer>\r\n        <SaveButton to=\"Write\">글쓰기</SaveButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst SubContainer = styled.section`\r\n  height: 90%;\r\n  width: 90%;\r\n`;\r\n\r\nconst SaveButton = styled(DefaultButton.withComponent(Link))`\r\n  text-decoration: none;\r\n  background-color: #0984e3;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableNum = styled.th`\r\n  width: 10%;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableTitle = styled.th`\r\n  width: 40%;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableWriter = styled.th`\r\n  width: 20%;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableDate = styled.th`\r\n  width: 20%;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return { boards: state.board_reducer.boards };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Board);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { board_delete } from \"../../../redux/action\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { DefaultButton } from \"../../modules/Button\";\r\nimport { MainContainer, BottomContainer } from \"../../modules/Container\";\r\n\r\nconst handleRemove = (history, dispatch, brdnum) => {\r\n  dispatch(board_delete(brdnum));\r\n  history.push(\"/Board\");\r\n};\r\n\r\nfunction BoardDetail(props) {\r\n  const { history, dispatch, selectedBoard } = props; // mapReduxStateToReactProps 메소드 이용해서 reducer의 state 가져오기\r\n\r\n  return (\r\n    <MainContainer>\r\n      <SubContainer>\r\n        <Title>\r\n          <div>{selectedBoard.title}</div>\r\n        </Title>\r\n        <Writer>{selectedBoard.writer}</Writer>\r\n        <Desc dangerouslySetInnerHTML={{ __html: selectedBoard.desc }}></Desc>\r\n      </SubContainer>\r\n      <BottomContainer>\r\n        <EditButton to=\"/Write\">수정하기</EditButton>\r\n        <DeleteButton\r\n          onClick={() => handleRemove(history, dispatch, selectedBoard.brdnum)}\r\n        >\r\n          삭제하기\r\n        </DeleteButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst SubContainer = styled.section`\r\n  height: 90%;\r\n  width: 90%;\r\n`;\r\n\r\nconst Title = styled.article`\r\n  height: 10%;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 60px;\r\n  font-size: 30px;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n`;\r\nconst Writer = styled.article`\r\n  height: 5%;\r\n  border-bottom: 1px solid #bdc3c7;\r\n  padding-bottom: 3%;\r\n  font-size: 20px;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n`;\r\nconst Desc = styled.div`\r\n  height: 76%;\r\n  padding: 3%;\r\n  font-size: 1.2em;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst EditButton = styled(DefaultButton.withComponent(Link))`\r\n  text-decoration: none;\r\n  background-color: #0984e3;\r\n`;\r\n\r\nconst DeleteButton = styled(DefaultButton)`\r\n  background-color: #c0392b;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return { selectedBoard: state.board_reducer.selectedBoard };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(BoardDetail);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { DefaultButton } from \"../modules/Button\";\r\nimport { MainContainer, SubContainer } from \"../modules/Container\";\r\n\r\nimport { change_name } from \"../../redux/action\";\r\n\r\nconst Setting = ({ dispatch, userState }) => {\r\n  const [userName, setUseName] = useState(userState.name);\r\n\r\n  const handleChange = (e) => {\r\n    setUseName(e.target.value);\r\n  };\r\n\r\n  const handleSaveName = () => {\r\n    if (window.confirm(userName + \" 으로 이름을 변경할까요? 🤔\") == true) {\r\n      dispatch(change_name(userName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SettingContainer>\r\n      <SubContainer>\r\n        <div\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"KOTRA_BOLD-Bold\",\r\n          }}\r\n        >\r\n          이름설정\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginTop: \"1rem\",\r\n          }}\r\n        >\r\n          <NameInput\r\n            type=\"text\"\r\n            value={userName}\r\n            onChange={handleChange}\r\n          ></NameInput>\r\n          <ConfirmButton onClick={handleSaveName}>변경</ConfirmButton>\r\n        </div>\r\n      </SubContainer>\r\n      <SubContainer>\r\n        <div\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"KOTRA_BOLD-Bold\",\r\n          }}\r\n        >\r\n          야간모드\r\n        </div>\r\n      </SubContainer>\r\n    </SettingContainer>\r\n  );\r\n};\r\n\r\nconst SettingContainer = styled(MainContainer)`\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst NameInput = styled.input`\r\n  font-size: 1rem;\r\n\r\n  padding: 0.5rem;\r\n  outline: none;\r\n  border-top: 0;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-width: 0.3rem;\r\n\r\n  border-color: #bdc3c7;\r\n  transition-property: border-color;\r\n  transition-duration: 1s;\r\n  transition-timing-function: ease-out;\r\n\r\n  &:hover {\r\n    border-color: #2980b9;\r\n    transition-property: border-color;\r\n    transition-duration: 1s;\r\n    transition-timing-function: ease-out;\r\n  }\r\n  &:focus {\r\n    border-color: #2980b9;\r\n  }\r\n`;\r\n\r\nconst ConfirmButton = styled(DefaultButton)`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  background-color: #2980b9;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nfunction mapReduxStateToReactProps(state) {\r\n  return { userState: state.userState_ruducer };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Setting);\r\n","import React, { Component } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nclass EditorComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  modules = {\r\n    toolbar: [\r\n      //[{ 'font': [] }],\r\n      [{ header: [1, 2, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" },\r\n      ],\r\n      [\"link\", \"image\"],\r\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [\"clean\"],\r\n    ],\r\n  };\r\n\r\n  formats = [\r\n    //'font',\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"align\",\r\n    \"color\",\r\n    \"background\",\r\n  ];\r\n\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    return (\r\n      <ReactQuill\r\n        style={{ width: \"100%\", height: \"75%\" }}\r\n        theme=\"snow\"\r\n        modules={this.modules}\r\n        formats={this.formats}\r\n        value={value || \"\"}\r\n        onChange={(content, delta, source, editor) =>\r\n          onChange(editor.getHTML())\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorComponent from \"./EditorComponent.js\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { DefaultButton } from \"../../modules/Button\";\r\n\r\nimport { board_create } from \"../../../redux/action\";\r\n\r\nfunction BoardWrite({ props, dispatch, selectedBoard, userName }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const updateState = Object.keys(selectedBoard).length === 0 ? false : true;\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onEditorChange = (value) => {\r\n    setDesc(value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n\r\n    const saveData = {\r\n      brdnum: updateState ? selectedBoard.brdnum : -1,\r\n      title: title,\r\n      writer: userName,\r\n      desc: desc,\r\n      date: new Date(),\r\n    };\r\n\r\n    dispatch(board_create(saveData));\r\n\r\n    props.history.push(\"/Board\");\r\n  };\r\n\r\n  // clean-up\r\n  useEffect(() => {\r\n    const unBlock = props.history.block(\"정말 떠나실 건가요?\");\r\n\r\n    return () => {\r\n      unBlock();\r\n    };\r\n  }, [props.history]);\r\n\r\n  useEffect(() => {\r\n    if (updateState) {\r\n      setTitle(selectedBoard.title);\r\n      setDesc(title.desc);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <TopContainer>\r\n        <TitleInput\r\n          placeholder=\"제목을 입력하세요\"\r\n          value={title}\r\n          onChange={onTitleChange}\r\n        />\r\n        <EditorComponent value={desc} onChange={onEditorChange} />\r\n      </TopContainer>\r\n      <BottomContainer>\r\n        <SaveButton to=\"Board\" onClick={handleSave}>\r\n          저장\r\n        </SaveButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90%;\r\n`;\r\n\r\nconst TopContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 98%;\r\n  height: 5%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 10%;\r\n  border-top: 1px solid #bdc3c7;\r\n`;\r\n\r\nconst SaveButton = styled(DefaultButton.withComponent(Link))`\r\n  text-decoration: none;\r\n  background-color: #0984e3;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return {\r\n    selectedBoard: state.board_reducer.selectedBoard,\r\n    userName: state.userState_ruducer.name,\r\n  };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(BoardWrite);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Home from \"./menu/Home\";\r\nimport Board from \"./menu/Board/Board\";\r\nimport BoardDetail from \"./menu/Board/BoardDetail\";\r\nimport Setting from \"./menu/Setting\";\r\nimport Write from \"./menu/Board/BoardWrite\";\r\n\r\nimport \"../font.css\";\r\n\r\nconst handleChangeMenu = (index, setCurPage) => {\r\n  setCurPage({ page: index });\r\n};\r\n\r\nfunction Main() {\r\n  const [curPage, setCurPage] = useState({ page: \"/\" });\r\n  return (\r\n    <Fragment>\r\n      <TitleText>REACT BOARD 📰</TitleText>\r\n\r\n      <MainContainer>\r\n        <NavMenu>\r\n          <ul>\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"/\"\r\n                onClick={() => handleChangeMenu(\"/\", setCurPage)}\r\n              >\r\n                홈\r\n              </NavLink>\r\n            </NavList>\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"Board\"\r\n                onClick={() => handleChangeMenu(\"Board\", setCurPage)}\r\n              >\r\n                자유게시판\r\n              </NavLink>\r\n            </NavList>\r\n            <NavList>\r\n              <NavGithub href=\"https://github.com/kyoung-jnn\" target=\"_blank\">\r\n                깃허브\r\n              </NavGithub>\r\n            </NavList>\r\n\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"Setting\"\r\n                onClick={() => handleChangeMenu(\"Setting\", setCurPage)}\r\n              >\r\n                설정\r\n              </NavLink>\r\n            </NavList>\r\n          </ul>\r\n        </NavMenu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Home></Home>}></Route>\r\n          <Route path=\"/Board/:title\" component={BoardDetail}></Route>\r\n          <Route\r\n            path=\"/Board\"\r\n            render={(props) => <Board props={props}></Board>}\r\n          ></Route>\r\n          <Route path=\"/Setting\" render={() => <Setting></Setting>}></Route>\r\n          <Route\r\n            path=\"/Write\"\r\n            render={(props) => <Write props={props}></Write>}\r\n          ></Route>\r\n        </Switch>\r\n      </MainContainer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  width: 60%;\r\n  height: 80%;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0;\r\n  box-shadow: 10px 10px 60px #bababa, -10px -10px 60px #fcfcfc;\r\n  border-radius: 0px;\r\n`;\r\n\r\nconst TitleText = styled.header`\r\n  text-align: center;\r\n  height: 10%;\r\n  font-size: 45px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst NavMenu = styled.nav`\r\n  width: 100%;\r\n  height: 10%;\r\n`;\r\n\r\nconst NavList = styled.li`\r\n  display: inline;\r\n  margin: 10px;\r\n  padding: 0px;\r\n  height: 0px;\r\n  font-size: 25px;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${(props) => (props.to === props.curpage ? \"#000\" : \"#b2bec3\")};\r\n  &:hover {\r\n    color: #2d3436;\r\n    transition: color ease-in 0.3s;\r\n  }\r\n`;\r\n\r\nconst NavGithub = styled(NavLink.withComponent(\"a\"))`\r\n  color: #b2bec3;\r\n`;\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./component/Main\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Main></Main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const USERSTATE_NAME = \"NAME\";\r\nconst USERSTATE_MODE = \"MODE\";\r\n\r\nconst BOARD_CREATE = \"CREATE\";\r\nconst BOARD_DELETE = \"DELETE\";\r\nconst BOARD_READ = \"READ\";\r\n\r\nconst userState = {\r\n  name: \"익명\",\r\n  mode: \"day\",\r\n};\r\n\r\nconst boardState = {\r\n  total: 3,\r\n  boards: [\r\n    {\r\n      brdnum: 1,\r\n      writer: \"뉴비\",\r\n      title: \"가입인사합니다~\",\r\n      desc: \"안녕하세요~ 잘 부탁드려요 😁\",\r\n      date: new Date(),\r\n    },\r\n    {\r\n      brdnum: 2,\r\n      writer: \"리잘알\",\r\n      title: \"리액트?\",\r\n      desc: \"리액트는 재밌어\",\r\n      date: new Date(),\r\n    },\r\n    {\r\n      brdnum: 3,\r\n      writer: \"어그로\",\r\n      title: \"들어오세요~~\",\r\n      desc: \"나가세요 😊\",\r\n      date: new Date(),\r\n    },\r\n  ],\r\n  selectedBoard: {},\r\n};\r\n\r\n// reducers\r\nexport function userState_ruducer(state = userState, action) {\r\n  switch (action.type) {\r\n    case USERSTATE_NAME: {\r\n      return {\r\n        ...state,\r\n        name: action.name,\r\n      };\r\n    }\r\n    case USERSTATE_MODE: {\r\n      return {\r\n        ...state,\r\n        mode: action.mode,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// CRUD 처리를 reducer 메소드에서 모두 처리\r\nexport function board_reducer(state = boardState, action) {\r\n  let boards = state.boards;\r\n\r\n  console.log(\"state\\n\", state);\r\n  console.log(\"action\\n\", action);\r\n\r\n  switch (action.type) {\r\n    case BOARD_CREATE: {\r\n      let data = action.data;\r\n      let total = state.total;\r\n\r\n      // 새로운 삽입\r\n      if (data.brdnum === -1) {\r\n        return {\r\n          total: total + 1,\r\n          boards: boards.concat({ ...data, brdnum: ++total, date: new Date() }),\r\n          selectedBoard: {},\r\n        };\r\n      }\r\n\r\n      // Update\r\n      return {\r\n        ...state,\r\n        boards: boards.map((row) =>\r\n          data.brdnum === row.brdnum ? { ...data } : row\r\n        ),\r\n        selectedBoard: {},\r\n      };\r\n    }\r\n    case BOARD_DELETE: {\r\n      let total = state.total;\r\n      let initNum = 1;\r\n      // 삭제할 row 빼고 다시 배열로 만들기\r\n      return {\r\n        total: total - 1,\r\n        boards: boards\r\n          .filter((row) => row.brdnum !== action.brdnum)\r\n          .map((row) => {\r\n            row.brdnum = initNum++;\r\n            if (initNum === total) initNum = 1;\r\n            return row;\r\n          }),\r\n        selectedBoard: {},\r\n      };\r\n    }\r\n    case BOARD_READ:\r\n      return {\r\n        ...state,\r\n        selectedBoard: boards.find((row) => row.brdnum === action.brdnum),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { userState_ruducer, board_reducer } from \"./reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  userState_ruducer,\r\n  board_reducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // chrome devtool 이용\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {  BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport  store  from \"./redux/store.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}