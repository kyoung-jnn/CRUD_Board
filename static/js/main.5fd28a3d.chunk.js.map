{"version":3,"sources":["component/modules/theme.js","component/modules/GlobalStyles.js","component/modules/Container.js","component/menu/Home.js","redux/action.js","component/modules/Button.js","component/menu/Board/BoardItem.js","component/menu/Board/BoardList.js","component/menu/Board/BoardDetail.js","component/menu/Board/Board.js","component/modules/SwitchButton.js","component/menu/Setting.js","component/menu/Board/EditorComponent.js","component/menu/Board/BoardWrite.js","component/Main.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["lightTheme","background","defaultText","unlinkText","linkHover","darkTheme","GlobalStyles","createGlobalStyle","theme","MainContainer","styled","main","SubContainer","section","BottomContainer","footer","HomeContainer","TitleText","article","props","ContentText","p","Home","style","fontSize","role","aria-label","board_read","brdnum","type","DefaultButton","button","BoardLink","Link","connect","row","dispatch","height","cursor","fontFamily","fontWeight","to","onClick","title","writer","date","toLocaleDateString","SaveButton","withComponent","Table","table","TableNum","th","TableTitle","TableWriter","TableDate","state","boards","board_reducer","useEffect","map","key","Title","Writer","Desc","div","EditButton","DeleteButton","selectedBoard","userName","userState_ruducer","name","dangerouslySetInnerHTML","__html","desc","history","push","alert","e","window","confirm","Board","exact","path","match","render","SwitchInput","input","SwitchLabel","label","SwitchBall","SettingContainer","NameInput","ConfirmButton","userState","userMode","setUserMode","useState","setUseName","display","flexDirection","alignItems","marginTop","value","onChange","target","checked","id","htmlFor","EditorComponent","modules","toolbar","header","list","indent","align","color","formats","this","StyledReactQuill","content","delta","source","editor","getHTML","Component","ReactQuill","TopContainer","TitleInput","setTitle","setDesc","updateState","Object","keys","length","unBlock","block","placeholder","preventDefault","saveData","Date","data","handleChangeMenu","index","setCurPage","page","OutterContainer","InnerContainer","NavMenu","nav","NavList","li","NavLink","curpage","NavGithub","curPage","mode","href","App","Fragment","Boolean","location","hostname","boardState","total","reducers","combineReducers","action","console","log","concat","initNum","filter","find","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5fd28a3d.chunk.js","sourcesContent":["export const lightTheme = {\r\n  background: \"#fff\",\r\n  defaultText: \"#111\",\r\n  unlinkText: \"#b2bec3\",\r\n  linkHover: \"#353b48\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  background: \"#2f3640\",\r\n  defaultText: \"#fff\",\r\n  unlinkText: \"#b2bec3\",\r\n  linkHover: \"#dcdde1\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  main,div,input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    transition: all 0.4s linear;\r\n  }\r\n  header,li,th,td{\r\n    color: ${({ theme }) => theme.defaultText};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90%;\r\n`;\r\n\r\nconst SubContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 50%;\r\n  margin-left: 10%;\r\n`;\r\n\r\nconst BottomContainer = styled.footer`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 10%;\r\n  width: 90%;\r\n  border-top: 1px solid #bdc3c7;\r\n`;\r\n\r\nexport { MainContainer, SubContainer, BottomContainer };\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { MainContainer, SubContainer } from \"../modules/Container\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <HomeContainer>\r\n      <SubContainer>\r\n        <TitleText\r\n          style={{\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          토이 프로젝트{\" \"}\r\n          <span role=\"img\" aria-label=\"emoji\">\r\n            🎉\r\n          </span>\r\n        </TitleText>\r\n        <ContentText\r\n          style={{\r\n            fontSize: 20,\r\n          }}\r\n        >\r\n          Redux와 Styled-component 연습을 위해 제작한\r\n          <br />\r\n          <br />\r\n          React 게시판입니다.\r\n          <span role=\"img\" aria-label=\"emoji\">\r\n            😊\r\n          </span>\r\n          <br />\r\n          <br />\r\n          게시글은 동일한 아이디만 수정 권한이 존재합니다.\r\n          <br />\r\n          <br />\r\n          설정 탭에서 아이디와 야간모드 실행이 가능합니다!\r\n        </ContentText>\r\n      </SubContainer>\r\n\r\n      <SubContainer>\r\n        <TitleText\r\n          style={{\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          기술 스택{\" \"}\r\n          <span role=\"img\" aria-label=\"emoji\">\r\n            🔧\r\n          </span>\r\n        </TitleText>\r\n        <article>\r\n          <ContentText\r\n            style={{\r\n              fontSize: 18,\r\n            }}\r\n          >\r\n            React <br />\r\n            <br /> Redux <br />\r\n            <br /> styled-component\r\n          </ContentText>\r\n        </article>\r\n      </SubContainer>\r\n    </HomeContainer>\r\n  );\r\n}\r\n\r\nconst HomeContainer = styled(MainContainer)`\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst TitleText = styled.article`\r\n  font-family: \"KOTRA_BOLD-Bold\";\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nconst ContentText = styled.p`\r\n  font-family: \"NanumBarunGothic\";\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nexport default Home;\r\n","const USERSTATE_NAME = \"NAME\";\r\nconst USERSTATE_MODE = \"MODE\";\r\n\r\nconst BOARD_CREATE = \"CREATE\";\r\nconst BOARD_DELETE = \"DELETE\";\r\nconst BOARD_READ = \"READ\";\r\n\r\nexport const change_name = (name) => ({ type: USERSTATE_NAME, name });\r\nexport const change_mode = (mode) => ({ type: USERSTATE_MODE, mode });\r\n\r\nexport const board_create = (data) => ({ type: BOARD_CREATE, data });\r\nexport const board_delete = (brdnum) => ({\r\n  type: BOARD_DELETE,\r\n  brdnum: brdnum,\r\n});\r\nexport const board_read = (brdnum) => ({ type: BOARD_READ, brdnum: brdnum });\r\n","import styled from \"styled-components\";\r\n\r\nexport const DefaultButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 5rem;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 5%;\r\n  border: 0;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: #fff;\r\n\r\n  opacity: 1;\r\n  transition-property: opacity;\r\n  transition-duration: 1s;\r\n  transition-timing-function: ease;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n    transition-property: opacity;\r\n    transition-duration: 1s;\r\n    transition-timing-function: ease ;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { board_read } from \"../../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nfunction BoardItem({ row, dispatch }) {\r\n  const handleDetail = (brdnum) => {\r\n    dispatch(board_read(brdnum));\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr style={{ height: 40, cursor: \"pointer\" }}>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>{row.brdnum}</td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\", fontWeight: \"bold\" }}>\r\n          <BoardLink\r\n            to={`/crud_board/Board/${row.brdnum}`}\r\n            onClick={() => handleDetail(row.brdnum)}\r\n          >\r\n            {row.title}\r\n          </BoardLink>\r\n        </td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>{row.writer}</td>\r\n        <td style={{ fontFamily: \"NanumBarunGothic\" }}>\r\n          {row.date.toLocaleDateString(\"kr-KR\")}\r\n        </td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst BoardLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nexport default connect()(BoardItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { board_read } from \"../../../redux/action\";\r\n\r\nimport { DefaultButton } from \"../../modules/Button\";\r\nimport { MainContainer, BottomContainer } from \"../../modules/Container\";\r\n\r\nimport BoardItem from \"./BoardItem\";\r\n\r\nfunction BoardList({ boards, dispatch }) {\r\n  // 게시판 메뉴에서 Read 초기화 하기\r\n  useEffect(() => {\r\n    dispatch(board_read(-1));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <SubContainer>\r\n        <Table>\r\n          <thead>\r\n            <tr style={{ height: \"4rem\" }}>\r\n              <TableNum>번호</TableNum>\r\n              <TableTitle>제목</TableTitle>\r\n              <TableWriter>작성자</TableWriter>\r\n              <TableDate>날짜</TableDate>\r\n            </tr>\r\n          </thead>\r\n          {boards.map((row) => (\r\n            <BoardItem key={row.brdnum} row={row}></BoardItem>\r\n          ))}\r\n        </Table>\r\n      </SubContainer>\r\n      <BottomContainer>\r\n        <SaveButton to=\"Write\">글쓰기</SaveButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst SubContainer = styled.section`\r\n  height: 90%;\r\n  width: 90%;\r\n`;\r\n\r\nconst SaveButton = styled(DefaultButton.withComponent(Link))`\r\n  text-decoration: none;\r\n  background-color: #0984e3;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableNum = styled.th`\r\n  width: 10%;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableTitle = styled.th`\r\n  width: 40%;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableWriter = styled.th`\r\n  width: 20%;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst TableDate = styled.th`\r\n  width: 20%;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return {\r\n    boards: state.board_reducer.boards,\r\n  };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(BoardList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { MainContainer, BottomContainer } from \"../../modules/Container\";\r\nimport { DefaultButton } from \"../../modules/Button\";\r\n\r\nimport { board_delete } from \"../../../redux/action\";\r\n\r\nfunction BoardDetail({ props, dispatch, selectedBoard, userName }) {\r\n  const handleEdit = () => {\r\n    if (selectedBoard.writer === userName) {\r\n      props.history.push(\"/crud_board/Write\");\r\n    } else {\r\n      alert(\"수정 권한이 없습니다! 🙄 (다른 아이디)\");\r\n    }\r\n  };\r\n\r\n  const handleRemove = (e) => {\r\n    if (selectedBoard.writer === userName) {\r\n      if (window.confirm(\"현재 글을 삭제할까요?\") === true) {\r\n        dispatch(board_delete(selectedBoard.brdnum));\r\n        props.history.push(\"/crud_board/Board\");\r\n      }\r\n    } else {\r\n      alert(\"삭제 권한이 없습니다! 🙄 (다른 아이디)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <SubContainer>\r\n        <Title>\r\n          <div>{selectedBoard.title}</div>\r\n        </Title>\r\n        <Writer>{selectedBoard.writer}</Writer>\r\n        <Desc dangerouslySetInnerHTML={{ __html: selectedBoard.desc }}></Desc>\r\n      </SubContainer>\r\n      <BottomContainer>\r\n        <EditButton onClick={handleEdit}>수정하기</EditButton>\r\n        <DeleteButton onClick={handleRemove}>삭제하기</DeleteButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst SubContainer = styled.section`\r\n  height: 90%;\r\n  width: 90%;\r\n`;\r\n\r\nconst Title = styled.article`\r\n  height: 10%;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 60px;\r\n  font-size: 30px;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\nconst Writer = styled.article`\r\n  height: 5%;\r\n  border-bottom: 1px solid #bdc3c7;\r\n  padding-bottom: 3%;\r\n  font-size: 20px;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\nconst Desc = styled.div`\r\n  height: 76%;\r\n  padding: 3%;\r\n  font-size: 1.2em;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nconst EditButton = styled(DefaultButton)`\r\n  background-color: #0984e3;\r\n`;\r\n\r\nconst DeleteButton = styled(DefaultButton)`\r\n  background-color: #c0392b;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return {\r\n    selectedBoard: state.board_reducer.selectedBoard,\r\n    userName: state.userState_ruducer.name,\r\n  };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(BoardDetail);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport BoardList from \"./BoardList\";\r\nimport BoradDetail from \"./BoardDetail\";\r\n\r\nfunction Board({ props }) {\r\n  return (\r\n    <Fragment>\r\n      <Route\r\n        exact\r\n        path={props.match.path}\r\n        render={(props) => <BoardList props={props}></BoardList>}\r\n      />\r\n      <Route\r\n        path={`${props.match.path}/:id`}\r\n        render={(props) => <BoradDetail props={props}></BoradDetail>}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SwitchInput = styled.input`\r\n  height: 0;\r\n  width: 0;\r\n  visibility: hidden;\r\n`;\r\n\r\nexport const SwitchLabel = styled.label`\r\n  position: relative;\r\n  width: 55px;\r\n  height: 28px;\r\n  cursor: pointer;\r\n  border-radius: 50px;\r\n\r\n  background-color: #bdc3c7;\r\n  ${SwitchInput}:checked + & {\r\n    background-color: #0984e3;\r\n  }\r\n  transition: background-color 0.4s ease;\r\n`;\r\n\r\nexport const SwitchBall = styled.div`\r\n  position: absolute;\r\n  top: 6%;\r\n  left: 4%;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  ${SwitchInput}:checked + ${SwitchLabel} & {\r\n    transform: translateX(26px);\r\n  }\r\n  transition: transform 0.4s ease;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { DefaultButton } from \"../modules/Button\";\r\nimport { MainContainer, SubContainer } from \"../modules/Container\";\r\nimport { SwitchInput, SwitchLabel, SwitchBall } from \"../modules/SwitchButton\";\r\n\r\nimport { change_name } from \"../../redux/action\";\r\n\r\nconst Setting = ({ dispatch, userState, userMode, setUserMode }) => {\r\n  const [userName, setUseName] = useState(userState.name);\r\n\r\n  const handleChange = (e) => {\r\n    setUseName(e.target.value);\r\n  };\r\n\r\n  const handleToggle = (e) => {\r\n    setUserMode(e.target.checked);\r\n  };\r\n\r\n  const handleSaveName = () => {\r\n    if (window.confirm(userName + \" 으로 아이디를 변경할까요? 🤔\") === true) {\r\n      dispatch(change_name(userName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SettingContainer>\r\n      <SubContainer>\r\n        <TitleText\r\n          style={{\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          아이디 설정\r\n        </TitleText>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginTop: \"1rem\",\r\n          }}\r\n        >\r\n          <NameInput\r\n            type=\"text\"\r\n            value={userName}\r\n            onChange={handleChange}\r\n          ></NameInput>\r\n          <ConfirmButton onClick={handleSaveName}>변경</ConfirmButton>\r\n        </div>\r\n      </SubContainer>\r\n      <SubContainer>\r\n        <TitleText\r\n          style={{\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          야간모드\r\n        </TitleText>\r\n        <SwitchInput\r\n          type=\"checkbox\"\r\n          checked={userMode}\r\n          onChange={handleToggle}\r\n          id=\"switch-input\"\r\n        ></SwitchInput>\r\n        <SwitchLabel htmlFor=\"switch-input\">\r\n          <SwitchBall></SwitchBall>\r\n        </SwitchLabel>\r\n      </SubContainer>\r\n    </SettingContainer>\r\n  );\r\n};\r\n\r\nconst SettingContainer = styled(MainContainer)`\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst NameInput = styled.input`\r\n  padding: 0.5rem;\r\n  outline: none;\r\n\r\n  font-size: 1rem;\r\n  color: ${(props) => props.theme.defaultText};\r\n\r\n  border-top: 0;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-width: 0.3rem;\r\n  border-color: #bdc3c7;\r\n  transition: border-color 1s ease-out;\r\n  &:hover {\r\n    border-color: #2980b9;\r\n    transition: border-color 1s ease-out;\r\n  }\r\n  &:focus {\r\n    border-color: #2980b9;\r\n  }\r\n`;\r\n\r\nconst ConfirmButton = styled(DefaultButton)`\r\n  width: 4rem;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  background-color: #0984e3;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst TitleText = styled.article`\r\n  font-family: \"KOTRA_BOLD-Bold\";\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nfunction mapReduxStateToReactProps(state) {\r\n  return { userState: state.userState_ruducer };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Setting);\r\n","import React, { Component } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nclass EditorComponent extends Component {\r\n  modules = {\r\n    toolbar: [\r\n      //[{ 'font': [] }],\r\n      [{ header: [1, 2, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" },\r\n      ],\r\n      [\"link\", \"image\"],\r\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [\"clean\"],\r\n    ],\r\n  };\r\n\r\n  formats = [\r\n    //'font',\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\",\r\n    \"align\",\r\n    \"color\",\r\n    \"background\",\r\n  ];\r\n\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    return (\r\n      <StyledReactQuill\r\n        theme=\"snow\"\r\n        modules={this.modules}\r\n        formats={this.formats}\r\n        value={value || \"\"}\r\n        onChange={(content, delta, source, editor) =>\r\n          onChange(editor.getHTML())\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledReactQuill = styled(ReactQuill)`\r\n  width: 100%;\r\n  height: 75%;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\nexport default EditorComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { MainContainer, BottomContainer } from \"../../modules/Container\";\r\nimport EditorComponent from \"./EditorComponent.js\";\r\n\r\nimport { DefaultButton } from \"../../modules/Button\";\r\n\r\nimport { board_create } from \"../../../redux/action\";\r\n\r\nfunction BoardWrite({ props, dispatch, selectedBoard, userName }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const updateState = Object.keys(selectedBoard).length === 0 ? false : true;\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onEditorChange = (value) => {\r\n    setDesc(value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n\r\n    const saveData = {\r\n      brdnum: updateState ? selectedBoard.brdnum : -1,\r\n      title: title,\r\n      writer: userName,\r\n      desc: desc,\r\n      date: new Date(),\r\n    };\r\n    dispatch(board_create(saveData));\r\n    props.history.push(\"/crud_board/Board\");\r\n  };\r\n\r\n  // clean-up\r\n  useEffect(() => {\r\n    const unBlock = props.history.block(\"글쓰기를 종료할까요?\");\r\n\r\n    return () => {\r\n      unBlock();\r\n    };\r\n  }, [props.history]);\r\n\r\n  useEffect(() => {\r\n    if (updateState) {\r\n      setTitle(selectedBoard.title);\r\n      setDesc(selectedBoard.desc);\r\n    }\r\n  }, [updateState, selectedBoard]);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <TopContainer>\r\n        <TitleInput\r\n          placeholder=\"제목을 입력하세요\"\r\n          value={title}\r\n          onChange={onTitleChange}\r\n        />\r\n        <EditorComponent value={desc} onChange={onEditorChange} />\r\n      </TopContainer>\r\n      <BottomContainer>\r\n        <SaveButton to=\"/crud_board/Board\" onClick={handleSave}>\r\n          저장\r\n        </SaveButton>\r\n      </BottomContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst TopContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 98%;\r\n  height: 5%;\r\n  margin-bottom: 10px;\r\n  color: ${(props) => props.theme.defaultText};\r\n`;\r\n\r\nconst SaveButton = styled(DefaultButton.withComponent(Link))`\r\n  text-decoration: none;\r\n  background-color: #0984e3;\r\n`;\r\n\r\n// Reduecer의 state.boards를 boards로 받아주기\r\nfunction mapReduxStateToReactProps(state) {\r\n  return {\r\n    selectedBoard: state.board_reducer.selectedBoard,\r\n    userName: state.userState_ruducer.name,\r\n  };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(BoardWrite);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme } from \"./modules/theme\";\r\nimport { GlobalStyles } from \"./modules/GlobalStyles\";\r\n\r\nimport Home from \"./menu/Home\";\r\nimport Board from \"./menu/Board/Board\";\r\nimport Setting from \"./menu/Setting\";\r\nimport Write from \"./menu/Board/BoardWrite\";\r\n\r\nimport \"../font.css\";\r\n\r\nconst handleChangeMenu = (index, setCurPage) => {\r\n  setCurPage({ page: index });\r\n};\r\n\r\nfunction Main({ userState }) {\r\n  const [curPage, setCurPage] = useState({ page: \"/\" });\r\n  const [userMode, setUserMode] = useState(userState.mode);\r\n\r\n  return (\r\n    <ThemeProvider theme={userMode ? darkTheme : lightTheme}>\r\n      <GlobalStyles />\r\n      <OutterContainer></OutterContainer>\r\n\r\n      <TitleText>\r\n        REACT BOARD  \r\n        <span role=\"img\" aria-label=\"emoji\">\r\n          📰\r\n        </span>\r\n      </TitleText>\r\n\r\n      <InnerContainer>\r\n        <NavMenu>\r\n          <ul>\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"/crud_board/\"\r\n                onClick={() => handleChangeMenu(\"/\", setCurPage)}\r\n              >\r\n                홈\r\n              </NavLink>\r\n            </NavList>\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"/crud_board//Board\"\r\n                onClick={() => handleChangeMenu(\"Board\", setCurPage)}\r\n              >\r\n                자유게시판\r\n              </NavLink>\r\n            </NavList>\r\n            <NavList>\r\n              <NavGithub href=\"https://github.com/kyoung-jnn\" target=\"_blank\">\r\n                깃허브\r\n              </NavGithub>\r\n            </NavList>\r\n\r\n            <NavList>\r\n              <NavLink\r\n                curpage={curPage.page}\r\n                to=\"/crud_board/Setting\"\r\n                onClick={() => handleChangeMenu(\"Setting\", setCurPage)}\r\n              >\r\n                설정\r\n              </NavLink>\r\n            </NavList>\r\n          </ul>\r\n        </NavMenu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"CRUD_Board/\" render={() => <Home></Home>}></Route>\r\n          <Route\r\n            path=\"/Board\"\r\n            render={(props) => <Board props={props}></Board>}\r\n          ></Route>\r\n          <Route\r\n            path=\"/Setting\"\r\n            render={() => (\r\n              <Setting userMode={userMode} setUserMode={setUserMode}></Setting>\r\n            )}\r\n          ></Route>\r\n          <Route\r\n            path=\"/Write\"\r\n            render={(props) => <Write props={props}></Write>}\r\n          ></Route>\r\n        </Switch>\r\n      </InnerContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst OutterContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n`;\r\n\r\nconst InnerContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  width: 60%;\r\n  height: 80%;\r\n  left: 50%;\r\n  top: 55%;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0;\r\n  box-shadow: 5px 5px 20px -15px #1e272e, -5px -5px 20px -15px #1e272e;\r\n`;\r\n\r\nconst TitleText = styled.header`\r\n  text-align: center;\r\n  height: 10%;\r\n  font-size: 45px;\r\n  font-weight: bold;\r\n  font-family: \"NanumBarunGothic\", sans-serif;\r\n`;\r\n\r\nconst NavMenu = styled.nav`\r\n  width: 100%;\r\n  height: 10%;\r\n`;\r\n\r\nconst NavList = styled.li`\r\n  display: inline;\r\n  margin: 10px;\r\n  padding: 0px;\r\n  height: 0px;\r\n  font-size: 1.5rem;\r\n  font-family: \"KOTRA_BOLD-Bold\", sans-serif;\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${(props) =>\r\n    props.to === props.curpage\r\n      ? props.theme.defaultText\r\n      : props.theme.unlinkText};\r\n  transition: color ease-in-out 0.3s;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.linkHover};\r\n    transition: color ease-in-out 0.3s;\r\n  }\r\n`;\r\n\r\nconst NavGithub = styled(NavLink.withComponent(\"a\"))`\r\n  color: #b2bec3;\r\n`;\r\n\r\nfunction mapReduxStateToReactProps(state) {\r\n  return { userState: state.userState_ruducer };\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Main);\r\n","import React from \"react\";\nimport Main from \"./component/Main\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Main></Main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const USERSTATE_NAME = \"NAME\";\r\nconst USERSTATE_MODE = \"MODE\";\r\n\r\nconst BOARD_CREATE = \"CREATE\";\r\nconst BOARD_DELETE = \"DELETE\";\r\nconst BOARD_READ = \"READ\";\r\n\r\nconst userState = {\r\n  name: \"익명\",\r\n  mode: false,\r\n};\r\n\r\nconst boardState = {\r\n  total: 4,\r\n  boards: [\r\n    {\r\n      brdnum: 1,\r\n      writer: \"뉴비\",\r\n      title: \"가입인사합니다~\",\r\n      desc: \"안녕하세요~ 잘 부탁드려요 😁\",\r\n      date: new Date(),\r\n    },\r\n    {\r\n      brdnum: 2,\r\n      writer: \"리잘알\",\r\n      title: \"리액트?\",\r\n      desc: \"리액트는 재밌어\",\r\n      date: new Date(),\r\n    },\r\n    {\r\n      brdnum: 3,\r\n      writer: \"어그로\",\r\n      title: \"들어오세요~~\",\r\n      desc: \"나가세요 😊\",\r\n      date: new Date(),\r\n    },\r\n    {\r\n      brdnum: 4,\r\n      writer: \"익명\",\r\n      title: \"수정 & 삭제 테스트는 여기서\",\r\n      desc: \"수정 & 삭제는 Redux를 통해 이루어집니다.<br/><br/> 게시글 작성자와 동일한 아이디일때 권한이 부여됩니다.\",\r\n      date: new Date(),\r\n    },\r\n  ],\r\n  selectedBoard: {},\r\n};\r\n\r\n// reducers\r\nexport function userState_ruducer(state = userState, action) {\r\n  switch (action.type) {\r\n    case USERSTATE_NAME: {\r\n      return {\r\n        ...state,\r\n        name: action.name,\r\n      };\r\n    }\r\n    case USERSTATE_MODE: {\r\n      return {\r\n        ...state,\r\n        mode: action.mode,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// CRUD 처리를 reducer 메소드에서 모두 처리\r\nexport function board_reducer(state = boardState, action) {\r\n  let boards = state.boards;\r\n\r\n  console.log(\"state\\n\", state);\r\n  console.log(\"action\\n\", action);\r\n\r\n  switch (action.type) {\r\n    case BOARD_CREATE: {\r\n      let data = action.data;\r\n      let total = state.total;\r\n\r\n      // 새로운 삽입\r\n      if (data.brdnum === -1) {\r\n        return {\r\n          total: total + 1,\r\n          boards: boards.concat({ ...data, brdnum: ++total, date: new Date() }),\r\n          selectedBoard: {},\r\n        };\r\n      }\r\n\r\n      // Update\r\n      return {\r\n        ...state,\r\n        boards: boards.map((row) =>\r\n          data.brdnum === row.brdnum ? { ...data } : row\r\n        ),\r\n        selectedBoard: {},\r\n      };\r\n    }\r\n    case BOARD_DELETE: {\r\n      let total = state.total;\r\n      let initNum = 1;\r\n      // 삭제할 row 빼고 다시 배열로 만들기\r\n      return {\r\n        total: total - 1,\r\n        boards: boards\r\n          .filter((row) => row.brdnum !== action.brdnum)\r\n          .map((row) => {\r\n            row.brdnum = initNum++;\r\n            if (initNum === total) initNum = 1;\r\n            return row;\r\n          }),\r\n        selectedBoard: {},\r\n      };\r\n    }\r\n    case BOARD_READ:\r\n      return {\r\n        ...state,\r\n        selectedBoard:\r\n          action.brdnum === -1\r\n            ? {}\r\n            : boards.find((row) => row.brdnum === action.brdnum),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { userState_ruducer, board_reducer } from \"./reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  userState_ruducer,\r\n  board_reducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // chrome devtool 이용\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {  BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport  store  from \"./redux/store.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}